{"filter":false,"title":"log.js","tooltip":"/src/shared/utils/log.js","undoManager":{"mark":5,"position":5,"stack":[[{"start":{"row":0,"column":0},"end":{"row":101,"column":1},"action":"insert","lines":["import isClient from './isClient';","import fs from 'fs';","import chalk from 'chalk';","","const isServer = !isClient();","const colorMatching = { // Color schemes definition, text isn't optionnal","  '!!!': {","    text: 'red'","  },","  '...': {","    text: 'gray'","  },","  '.P.': {","    text: 'white',","    bg: 'yellow'","  },","  'o_o': {","    text: 'white',","    bg: 'yellow'","  },","  '.A.': {","    text: 'white',","    bg: 'green',","    bgClient : 'YellowGreen'","  },","  '.R.': {","    text: 'white',","    bg: 'cyan',","    bgClient: 'SkyBlue'","  },","  '.X.': {","    text: 'gray',","  },","  '.E.': {","    text: 'white',","    bg: 'cyan',","    bgClient: 'Gold'","  },","  '+++': {","    text: 'white',","    bg: 'magenta',","    bgClient: 'LightPink'","  },","  '_w_': {","    text: 'white',","    bg: 'black',","    bgClient: 'DarkSlateGray'","  },","};","","export default function log(...messages) {","  ","  const firstMessage = messages[0];","  ","  if (typeof firstMessage === 'string') { // Should we colorize the first message ?","    const prefix = firstMessage.slice(0, 3);","    const match  = colorMatching[prefix];","    ","    if (match) { // If a colored prefix is found","      const {text, bg, bgClient} = match;","      messages.shift(); // The first message is removed from the message list","      ","      // Then displayed with colors (server : chalk, client: CSS)","      if (isServer) console.log(chalk[bg ? 'bg' + bg.slice(0, 1).toUpperCase() + bg.slice(1) : text](prefix), firstMessage.slice(3), ...messages);","      else {","        let css = `color:${text};`;","        css += bg ? bgClient ? `background:${bgClient};` : `background:${bg};` : '';","        console.log(`%c${prefix}`, css, firstMessage.slice(3), ...messages);","      }","    }","    else console.log(...messages);","  } ","  else console.log(...messages);","    ","  // if (isServer) { // On server we save the message on a log file.","  if (0) { // !","    const d = new Date();","    const line = {","      data:  messages.join(' '),","      date:  d.toLocaleString('fr'), // :'( not very local...","      year:  d.getFullYear(),","      month: d.getMonth(),","      day:   d.getDate(),","      h:     d.getHours(),","      m:     d.getMinutes(),","      s:     d.getSeconds()","    };","    fs.appendFile('log/server.log', JSON.stringify(line) +'\\n', err => {","      if (err) console.log(err, err.stack);","    });","  }","}","","// Logs an error. Could also be used for client-side error reporting","export function logError(msg, error) {","  const err = error || '';","  if (err instanceof Error) {","    log('!!!', msg);","    log(err.stack);","  } ","  else log('!!!', msg, err);","}"],"id":1}],[{"start":{"row":101,"column":1},"end":{"row":102,"column":0},"action":"insert","lines":["",""],"id":2}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["import isClient from './isClient';",""],"id":3},{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["import isClient from './isClient';",""]}],[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"remove","lines":["import isClient from './isClient';",""],"id":4},{"start":{"row":2,"column":0},"end":{"row":3,"column":0},"action":"insert","lines":["import isClient from './isClient';",""]}],[{"start":{"row":74,"column":0},"end":{"row":91,"column":0},"action":"remove","lines":["  // if (isServer) { // On server we save the message on a log file.","  if (0) { // !","    const d = new Date();","    const line = {","      data:  messages.join(' '),","      date:  d.toLocaleString('fr'), // :'( not very local...","      year:  d.getFullYear(),","      month: d.getMonth(),","      day:   d.getDate(),","      h:     d.getHours(),","      m:     d.getMinutes(),","      s:     d.getSeconds()","    };","    fs.appendFile('log/server.log', JSON.stringify(line) +'\\n', err => {","      if (err) console.log(err, err.stack);","    });","  }",""],"id":9}],[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["import fs from 'fs';",""],"id":10}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":0,"column":0},"end":{"row":0,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1447958501563,"hash":"ab55bb9be2b7c0376cc55ad23a4e20f3133dbfe4"}